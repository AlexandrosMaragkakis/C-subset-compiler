//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/Alexandros/RiderProjects/SimpleCompiler/Grammar/MINIC.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="MINICParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IMINICVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="MINICParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompileUnit([NotNull] MINICParser.CompileUnitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MINICParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaration([NotNull] MINICParser.DeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MINICParser.initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInitializer([NotNull] MINICParser.InitializerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MINICParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDeclaration([NotNull] MINICParser.FunctionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MINICParser.functionDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDefinition([NotNull] MINICParser.FunctionDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MINICParser.typeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeSpecifier([NotNull] MINICParser.TypeSpecifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MINICParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] MINICParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MINICParser.localDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocalDeclaration([NotNull] MINICParser.LocalDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MINICParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] MINICParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MINICParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] MINICParser.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MINICParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] MINICParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MINICParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatementList([NotNull] MINICParser.StatementListContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expr_PLUSMINUS</c>
	/// labeled alternative in <see cref="MINICParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr_PLUSMINUS([NotNull] MINICParser.Expr_PLUSMINUSContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expr_LTE</c>
	/// labeled alternative in <see cref="MINICParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr_LTE([NotNull] MINICParser.Expr_LTEContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expr_ASSIGN</c>
	/// labeled alternative in <see cref="MINICParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr_ASSIGN([NotNull] MINICParser.Expr_ASSIGNContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expr_LT</c>
	/// labeled alternative in <see cref="MINICParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr_LT([NotNull] MINICParser.Expr_LTContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expr_NUMBER</c>
	/// labeled alternative in <see cref="MINICParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr_NUMBER([NotNull] MINICParser.Expr_NUMBERContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expr_NEQUAL</c>
	/// labeled alternative in <see cref="MINICParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr_NEQUAL([NotNull] MINICParser.Expr_NEQUALContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expr_PLUS</c>
	/// labeled alternative in <see cref="MINICParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr_PLUS([NotNull] MINICParser.Expr_PLUSContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expr_EQUAL</c>
	/// labeled alternative in <see cref="MINICParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr_EQUAL([NotNull] MINICParser.Expr_EQUALContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expr_GT</c>
	/// labeled alternative in <see cref="MINICParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr_GT([NotNull] MINICParser.Expr_GTContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expr_PARENTHESIS</c>
	/// labeled alternative in <see cref="MINICParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr_PARENTHESIS([NotNull] MINICParser.Expr_PARENTHESISContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expr_IDENTIFIER</c>
	/// labeled alternative in <see cref="MINICParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr_IDENTIFIER([NotNull] MINICParser.Expr_IDENTIFIERContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expr_MINUS</c>
	/// labeled alternative in <see cref="MINICParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr_MINUS([NotNull] MINICParser.Expr_MINUSContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expr_FCALL</c>
	/// labeled alternative in <see cref="MINICParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr_FCALL([NotNull] MINICParser.Expr_FCALLContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expr_OR</c>
	/// labeled alternative in <see cref="MINICParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr_OR([NotNull] MINICParser.Expr_ORContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expr_DIVMULT</c>
	/// labeled alternative in <see cref="MINICParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr_DIVMULT([NotNull] MINICParser.Expr_DIVMULTContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expr_NOT</c>
	/// labeled alternative in <see cref="MINICParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr_NOT([NotNull] MINICParser.Expr_NOTContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expr_GTE</c>
	/// labeled alternative in <see cref="MINICParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr_GTE([NotNull] MINICParser.Expr_GTEContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expr_AND</c>
	/// labeled alternative in <see cref="MINICParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr_AND([NotNull] MINICParser.Expr_ANDContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MINICParser.args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgs([NotNull] MINICParser.ArgsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MINICParser.fargs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFargs([NotNull] MINICParser.FargsContext context);
}
